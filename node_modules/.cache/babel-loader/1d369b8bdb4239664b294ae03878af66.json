{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jieun\\\\Desktop\\\\react-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TOC from \"./components/TOC\";\nimport ReadContent from \"./components/ReadContent\";\nimport Subject from './components/Subject';\nimport Control from './components/Control';\nimport CreateContent from './components/CreateContent';\nimport UpdateContent from './components/UpdateContent';\n/*\nfunction App() {\n  return (\n    <div className=\"App\">\n      Hello, React!!!\n    </div>\n  );\n}\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  // render 보다 먼저 실행되면서 컴포넌트를 초기화 시켜주고 싶은 코드는 constructor안에다가 코드 작성\n  constructor(props) {\n    // state값 초기화하고 초기 값으로 Subject 태그 값 세팅\n    super(props);\n    this.max_content_id = 3;\n    this.state = {\n      mode: \"create\",\n      selected_content_id: 2,\n      subject: {\n        title: \"WEB\",\n        sub: \"world wide web!\"\n      },\n      welcome: {\n        title: \"welcome\",\n        desc: \"Hello, React!\"\n      },\n      contents: [// 내용이 많아서 배열 활용[]\n      {\n        id: 1,\n        title: \"HTML\",\n        desc: \"HTML is for information\"\n      }, {\n        id: 2,\n        title: \"CSS\",\n        desc: \"CSS is for design\"\n      }, {\n        id: 3,\n        title: \"JavaScript\",\n        desc: \"JavaScript is for interaction\"\n      }]\n    };\n  }\n\n  getReadContent() {\n    var i = 0;\n\n    while (i < this.state.contents.length) {\n      var data = this.state.contents[i];\n\n      if (data.id === this.state.selected_content_id) {\n        return data;\n        break;\n      }\n\n      i = i + 1;\n    }\n  } // 코드가 너무 복잡해서 새로운 함수를 생성해서 랜더 코드를 가볍게\n\n\n  getContent() {\n    var _title,\n        _desc,\n        _article = null;\n\n    if (this.state.mode === 'welcome') {\n      _title = this.state.welcome.title;\n      _desc = this.state.welcome.desc;\n      _article = /*#__PURE__*/_jsxDEV(ReadContent, {\n        title: _title,\n        desc: _desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 18\n      }, this);\n    } else if (this.state.mode === 'read') {\n      var _content = this.getReadContent();\n\n      _article = /*#__PURE__*/_jsxDEV(ReadContent, {\n        title: _content.title,\n        desc: _content.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 18\n      }, this);\n    } else if (this.state.mode == \"create\") {\n      _article = /*#__PURE__*/_jsxDEV(CreateContent, {\n        onSubmit: function (_title, _desc) {\n          // this.state.contents 를 통해서 새로운 컨텐트 값을 추가\n          this.max_content_id = this.max_content_id + 1; // 리액트가 contents의 값이 변한 것을 눈치 채지 못함\n          // push는 오리지널 데이터를 건들이는 것이라 사용X\n          // this.state.contents.push(\n          //   {id:this.max_content_id, title:_title, desc:_desc}\n          // );\n\n          var _contents = this.state.contents.concat({\n            id: this.max_content_id,\n            title: _title,\n            desc: _desc\n          }); // setState를 통해 알려줘야함\n          // concat을 사용함으로써 _contents 변수에 들어있는 값으로 교체되는 것\n\n\n          this.setState({\n            contents: _contents\n          });\n          console.log(_title, _desc);\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 18\n      }, this);\n    } else if (this.state.mode == \"update\") {\n      _content = this.getReadContent();\n      _article = /*#__PURE__*/_jsxDEV(UpdateContent, {\n        data: _content,\n        onSubmit: function (_title, _desc) {\n          // this.state.contents 를 통해서 새로운 컨텐트 값을 추가\n          this.max_content_id = this.max_content_id + 1; // 리액트가 contents의 값이 변한 것을 눈치 채지 못함\n          // push는 오리지널 데이터를 건들이는 것이라 사용X\n          // this.state.contents.push(\n          //   {id:this.max_content_id, title:_title, desc:_desc}\n          // );\n\n          var _contents = this.state.contents.concat({\n            id: this.max_content_id,\n            title: _title,\n            desc: _desc\n          }); // setState를 통해 알려줘야함\n          // concat을 사용함으로써 _contents 변수에 들어있는 값으로 교체되는 것\n\n\n          this.setState({\n            contents: _contents\n          });\n          console.log(_title, _desc);\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 18\n      }, this);\n    }\n\n    return _article;\n  } // props나 state가 바뀌면 해당되는 render함수가 호출됨(화면 재호출)\n\n\n  render() {\n    console.log(\"App render\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Subject, {\n        title: this.state.subject.title,\n        sub: this.state.subject.sub // 이벤트 생성\n        ,\n        onChangePage: function () {\n          this.setState({\n            mode: \"welcome\"\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TOC, {\n        onChangePage: function (id) {\n          this.setState({\n            mode: \"read\",\n            selected_content_id: Number(id)\n          });\n        }.bind(this),\n        data: this.state.contents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Control, {\n        onChangeMode: function (_mode) {\n          this.setState({\n            mode: _mode\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), this.getContent()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/jieun/Desktop/react-app/src/App.js"],"names":["React","Component","TOC","ReadContent","Subject","Control","CreateContent","UpdateContent","App","constructor","props","max_content_id","state","mode","selected_content_id","subject","title","sub","welcome","desc","contents","id","getReadContent","i","length","data","getContent","_title","_desc","_article","_content","_contents","concat","setState","console","log","bind","render","Number","_mode"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport TOC from \"./components/TOC\";\nimport ReadContent from \"./components/ReadContent\";\nimport Subject from './components/Subject';\nimport Control from './components/Control';\nimport CreateContent from './components/CreateContent';\nimport UpdateContent from './components/UpdateContent';\n\n/*\nfunction App() {\n  return (\n    <div className=\"App\">\n      Hello, React!!!\n    </div>\n  );\n}\n*/\n\nclass App extends Component {\n  // render 보다 먼저 실행되면서 컴포넌트를 초기화 시켜주고 싶은 코드는 constructor안에다가 코드 작성\n  constructor(props){\n    // state값 초기화하고 초기 값으로 Subject 태그 값 세팅\n    super(props);\n    this.max_content_id = 3;\n    this.state = {\n      mode:\"create\",\n      selected_content_id:2,\n      subject : {title:\"WEB\", sub:\"world wide web!\"},\n      welcome : {title:\"welcome\", desc:\"Hello, React!\"},\n      contents: [ // 내용이 많아서 배열 활용[]\n        {id:1, title:\"HTML\", desc:\"HTML is for information\"},\n        {id:2, title:\"CSS\", desc:\"CSS is for design\"},\n        {id:3, title:\"JavaScript\", desc:\"JavaScript is for interaction\"}\n      ]\n    }\n  }\n  getReadContent(){\n    var i = 0;\n      while(i < this.state.contents.length){\n        var data = this.state.contents[i];\n        if(data.id === this.state.selected_content_id){\n          return data;\n          break;\n        }\n        i = i+1;\n      }\n  }\n  // 코드가 너무 복잡해서 새로운 함수를 생성해서 랜더 코드를 가볍게\n  getContent(){\n    var _title,_desc, _article = null;\n    if(this.state.mode === 'welcome'){\n      _title = this.state.welcome.title;\n      _desc = this.state.welcome.desc;\n      _article = <ReadContent title={_title} desc={_desc}></ReadContent>\n    } else if(this.state.mode === 'read'){\n      var _content = this.getReadContent();\n      _article = <ReadContent title={_content.title} desc={_content.desc}></ReadContent>\n    } else if(this.state.mode ==\"create\"){\n      _article = <CreateContent onSubmit={function(_title,_desc){\n        // this.state.contents 를 통해서 새로운 컨텐트 값을 추가\n        this.max_content_id = this.max_content_id + 1;\n        // 리액트가 contents의 값이 변한 것을 눈치 채지 못함\n        // push는 오리지널 데이터를 건들이는 것이라 사용X\n        // this.state.contents.push(\n        //   {id:this.max_content_id, title:_title, desc:_desc}\n        // );\n        var _contents = this.state.contents.concat(\n          {id:this.max_content_id, title:_title, desc:_desc}\n        );\n        // setState를 통해 알려줘야함\n        // concat을 사용함으로써 _contents 변수에 들어있는 값으로 교체되는 것\n        this.setState({\n          contents:_contents\n        });\n        console.log(_title,_desc);\n      }.bind(this)}></CreateContent>\n    } else if(this.state.mode ==\"update\"){\n      _content = this.getReadContent();\n      _article = <UpdateContent data={_content} onSubmit={function(_title,_desc){\n        // this.state.contents 를 통해서 새로운 컨텐트 값을 추가\n        this.max_content_id = this.max_content_id + 1;\n        // 리액트가 contents의 값이 변한 것을 눈치 채지 못함\n        // push는 오리지널 데이터를 건들이는 것이라 사용X\n        // this.state.contents.push(\n        //   {id:this.max_content_id, title:_title, desc:_desc}\n        // );\n        var _contents = this.state.contents.concat(\n          {id:this.max_content_id, title:_title, desc:_desc}\n        );\n        // setState를 통해 알려줘야함\n        // concat을 사용함으로써 _contents 변수에 들어있는 값으로 교체되는 것\n        this.setState({\n          contents:_contents\n        });\n        console.log(_title,_desc);\n      }.bind(this)}></UpdateContent>\n    }\n    return _article;\n  }\n\n  // props나 state가 바뀌면 해당되는 render함수가 호출됨(화면 재호출)\n  render() {\n    console.log(\"App render\");\n    return(\n      <div className='App'>\n        <Subject \n          title={this.state.subject.title} \n          sub={this.state.subject.sub}\n          // 이벤트 생성\n          onChangePage={function(){\n            this.setState({mode:\"welcome\"});\n          }.bind(this)}\n        >\n        </Subject>\n        <TOC \n          onChangePage={function(id){\n            this.setState({\n              mode:\"read\",\n              selected_content_id:Number(id)\n            });\n          }.bind(this)}\n          data={this.state.contents}\n        ></TOC>\n        <Control onChangeMode={function(_mode){\n          this.setState({\n            mode:_mode\n          });\n        }.bind(this)}>\n        </Control>\n        {this.getContent()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}